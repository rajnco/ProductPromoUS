package main

import (
	"product-promo-us/rmqsreceiver"
	"product-promo-us/controller"
        "product-promo-us/database"

        "github.com/gin-gonic/gin"
        "github.com/prometheus/client_golang/prometheus"
        "github.com/prometheus/client_golang/prometheus/promhttp"

        log "github.com/sirupsen/logrus"

        swaggerFiles "github.com/swaggo/files"     // swagger embed files
        ginSwagger "github.com/swaggo/gin-swagger" // gin-swagger middleware

        "product-promo-us/docs" // docs is generated by Swag CLI, you have to import it.

)

type Product struct {
        Id          int     `json:"id"`
        Name        string  `json:"name"`
        Description string  `json:"description"`
        Price       float32 `json:"price"` //UnitPrice
        Quantity    int     `json:"quantity"`
        Discount    int     `json:"discount"` //MaxDiscountPercent
        Country     string  `json:"country"`
}


func init(){
        prometheus.MustRegister(rmqsreceiver.IdAccessCounter)

        if err := database.InitDB().Error; err != nil {
                log.Println("failed to connect db")
        }
        database.StartMigration()

}

// @title           Product Promo System API - US Market
// @version         1.0
// @description     This is Product Promo System for US Market .
func main() {

	//log.Println("Starting Receiver Service")
	//receiver := rmqsreceiver.Connect()
	
	receiver := rmqsreceiver.Connect("ProducedUS")
	go receiver.ReceiveMessage()

        router := gin.Default()

        // programmatically set swagger info
        docs.SwaggerInfo.Title = "Product Promo System API - US Market"
        docs.SwaggerInfo.Description = "This is a Product Promo System API - US Market"
        docs.SwaggerInfo.Version = "1.0"
        docs.SwaggerInfo.Host = "localhost:8081"
        //docs.SwaggerInfo.BasePath = "/v2"
        docs.SwaggerInfo.Schemes = []string{"http"}
        //docs.SwaggerInfo.Schemes = []string{"http", "https"}

        mainGroup := router.Group("/")
        {
                productsGroup := mainGroup.Group("/products")
                {
                        productsGroup.GET("", controller.ListProducts)
                }

                productGroup := mainGroup.Group("/product")
                {
                        productGroup.GET("/:id", controller.GetProduct)
                }

                prometheusGroup := mainGroup.Group("/metrics")
                {
                        prometheusGroup.GET("", gin.WrapH(promhttp.Handler()))
                }
        }

        // use ginSwagger middleware to serve the API docs
        router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	router.Run(":8081")
}
